//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "budget_plan_item")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub budget_plan_id: i32,
    pub budget_item_id: i32,
    pub month: i32,
    pub planned_amount: Decimal,
    pub note: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::budget_item::Entity",
        from = "Column::BudgetItemId",
        to = "super::budget_item::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    BudgetItem,
    #[sea_orm(
        belongs_to = "super::budget_plan::Entity",
        from = "Column::BudgetPlanId",
        to = "super::budget_plan::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    BudgetPlan,
}

impl Related<super::budget_item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BudgetItem.def()
    }
}

impl Related<super::budget_plan::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BudgetPlan.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
