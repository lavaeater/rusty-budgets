//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "imports")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub text: String,
    #[sea_orm(column_type = "Binary(1)")]
    pub data: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::import_row::Entity")]
    ImportRow,
}

impl Related<super::import_row::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ImportRow.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
